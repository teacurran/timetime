package com.approachingpi.timetime;
// Generated Oct 1, 2009 7:54:07 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Task generated by hbm2java
 */
@Entity
@Table(name = "Task")
public class Task implements java.io.Serializable {

	private Integer id;
	private Company company;
	private Integer parentId;
	private String name;
	private String nameShort;
	private String path;
	private Date dateCreated;
	private Date dateModified;
	private Integer createdAccountId;
	private Integer modifiedAccountId;
	private Date dateLastEvent;
	private Set<TaskSummary> taskSummaries = new HashSet<TaskSummary>(0);
	private Set<TimeSegment> timeSegments = new HashSet<TimeSegment>(0);

	public Task() {
	}

	public Task(Company company) {
		this.company = company;
	}
	public Task(Company company, Integer parentId, String name,
			String nameShort, String path, Date dateCreated, Date dateModified,
			Integer createdAccountId, Integer modifiedAccountId,
			Date dateLastEvent, Set<TaskSummary> taskSummaries,
			Set<TimeSegment> timeSegments) {
		this.company = company;
		this.parentId = parentId;
		this.name = name;
		this.nameShort = nameShort;
		this.path = path;
		this.dateCreated = dateCreated;
		this.dateModified = dateModified;
		this.createdAccountId = createdAccountId;
		this.modifiedAccountId = modifiedAccountId;
		this.dateLastEvent = dateLastEvent;
		this.taskSummaries = taskSummaries;
		this.timeSegments = timeSegments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "companyId", nullable = false)
	@NotNull
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@Column(name = "parentId")
	public Integer getParentId() {
		return this.parentId;
	}

	public void setParentId(Integer parentId) {
		this.parentId = parentId;
	}

	@Column(name = "name", length = 200)
	@Length(max = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "nameShort", length = 20)
	@Length(max = 20)
	public String getNameShort() {
		return this.nameShort;
	}

	public void setNameShort(String nameShort) {
		this.nameShort = nameShort;
	}

	@Column(name = "path", length = 200)
	@Length(max = 200)
	public String getPath() {
		return this.path;
	}

	public void setPath(String path) {
		this.path = path;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateCreated", length = 19)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateModified", length = 19)
	public Date getDateModified() {
		return this.dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	@Column(name = "createdAccountId")
	public Integer getCreatedAccountId() {
		return this.createdAccountId;
	}

	public void setCreatedAccountId(Integer createdAccountId) {
		this.createdAccountId = createdAccountId;
	}

	@Column(name = "modifiedAccountId")
	public Integer getModifiedAccountId() {
		return this.modifiedAccountId;
	}

	public void setModifiedAccountId(Integer modifiedAccountId) {
		this.modifiedAccountId = modifiedAccountId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateLastEvent", length = 19)
	public Date getDateLastEvent() {
		return this.dateLastEvent;
	}

	public void setDateLastEvent(Date dateLastEvent) {
		this.dateLastEvent = dateLastEvent;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
	public Set<TaskSummary> getTaskSummaries() {
		return this.taskSummaries;
	}

	public void setTaskSummaries(Set<TaskSummary> taskSummaries) {
		this.taskSummaries = taskSummaries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "task")
	public Set<TimeSegment> getTimeSegments() {
		return this.timeSegments;
	}

	public void setTimeSegments(Set<TimeSegment> timeSegments) {
		this.timeSegments = timeSegments;
	}

}
