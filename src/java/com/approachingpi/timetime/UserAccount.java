package com.approachingpi.timetime;
// Generated Oct 1, 2009 7:54:07 PM by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;
import static javax.persistence.GenerationType.IDENTITY;

import org.hibernate.validator.Email;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
import org.jboss.seam.annotations.security.management.*;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "UserAccount", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class UserAccount implements java.io.Serializable {

	private Integer id;
	private Company company;
	private String nameFirst;
	private String nameLast;
	private String email;
	private String password;
	private Integer timezone;
	private Date dateCreated;
	private Date dateModified;
	private Set<TimeSegment> timeSegments = new HashSet<TimeSegment>(0);
	private Set<TaskSummary> taskSummaries = new HashSet<TaskSummary>(0);
	private boolean enabled;

	private Set<UserRole> roles;

	public UserAccount() {
	}

	public UserAccount(String email, String password) {
		this.email = email;
		this.password = password;
	}
	public UserAccount(Company company, String nameFirst, String nameLast,
			String email, String password, Integer timezone, Date dateCreated,
			Date dateModified, Set<TimeSegment> timeSegments,
			Set<TaskSummary> taskSummaries) {
		this.company = company;
		this.nameFirst = nameFirst;
		this.nameLast = nameLast;
		this.email = email;
		this.password = password;
		this.timezone = timezone;
		this.dateCreated = dateCreated;
		this.dateModified = dateModified;
		this.timeSegments = timeSegments;
		this.taskSummaries = taskSummaries;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "companyId")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@Column(name = "nameFirst", length = 100)
	@Length(max = 100)
	@UserFirstName
	public String getNameFirst() {
		return this.nameFirst;
	}

	public void setNameFirst(String nameFirst) {
		this.nameFirst = nameFirst;
	}

	@Column(name = "nameLast", length = 100)
	@Length(max = 100)
	@UserLastName
	public String getNameLast() {
		return this.nameLast;
	}

	public void setNameLast(String nameLast) {
		this.nameLast = nameLast;
	}

	@Column(name = "email", nullable = false, length = 200)
	@NotNull
	@Length(max = 200)
	@UserPrincipal
	@Email
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	@UserPassword(hash = "md5")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "timezone")
	public Integer getTimezone() {
		return this.timezone;
	}

	public void setTimezone(Integer timezone) {
		this.timezone = timezone;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateCreated", length = 19)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateModified", length = 19)
	public Date getDateModified() {
		return this.dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<TimeSegment> getTimeSegments() {
		return this.timeSegments;
	}

	public void setTimeSegments(Set<TimeSegment> timeSegments) {
		this.timeSegments = timeSegments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<TaskSummary> getTaskSummaries() {
		return this.taskSummaries;
	}

	public void setTaskSummaries(Set<TaskSummary> taskSummaries) {
		this.taskSummaries = taskSummaries;
	}


	@UserEnabled
	public boolean isEnabled() {
		return enabled;
	}

	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}

	@UserRoles
	@ManyToMany
	@JoinTable(name = "LnkUserAccountRole", joinColumns = @JoinColumn(name = "account_id"), inverseJoinColumns = @JoinColumn(name = "member_of_role"))
	public Set<UserRole> getRoles() {
		return roles;
	}

	public void setRoles(Set<UserRole> roles) {
		this.roles = roles;
	}

}
